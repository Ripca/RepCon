================================================================================
                    COMANDOS LISTOS PARA COPIAR Y PEGAR
================================================================================

OPCI√ìN 1: POWERSHELL (Recomendado para Windows)
================================================================================

Copia y pega TODOS estos comandos en PowerShell:

---INICIO---

cd python_project
pip install -r requirements.txt
python app.py

---FIN---

Luego abre en navegador: http://localhost:5000


OPCI√ìN 2: CMD (S√≠mbolo del sistema)
================================================================================

Copia y pega TODOS estos comandos en CMD:

---INICIO---

cd python_project
pip install -r requirements.txt
python app.py

---FIN---

Luego abre en navegador: http://localhost:5000


OPCI√ìN 3: SCRIPT AUTOM√ÅTICO (Windows)
================================================================================

Solo haz doble-click en:
  python_project/run.bat

El script har√° todo autom√°ticamente.


OPCI√ìN 4: SCRIPT POWERSHELL
================================================================================

Copia y pega en PowerShell:

---INICIO---

cd python_project
Set-ExecutionPolicy -ExecutionPolicy Bypass -Scope Process
.\run.ps1

---FIN---


OPCI√ìN 5: LINUX/MAC
================================================================================

Copia y pega en Terminal:

---INICIO---

cd python_project
pip install -r requirements.txt
python app.py

---FIN---

Luego abre en navegador: http://localhost:5000


VERIFICACI√ìN R√ÅPIDA
================================================================================

Despu√©s de ejecutar los comandos, deber√≠as ver en la consola:

  ============================================================
  üöÄ INICIANDO APLICACI√ìN DE PRON√ìSTICO
  ============================================================
  
  üìÇ Cargando datos de archivos...
  [... mensajes de carga ...]
  
  ü§ñ Inicializando Forecaster...
  ‚úì Forecaster listo
  
   * Running on http://127.0.0.1:5000

Si ves esto, ¬°todo est√° funcionando correctamente!


ACCESO A LA APLICACI√ìN
================================================================================

Una vez que veas "Running on http://127.0.0.1:5000", abre tu navegador y ve a:

  http://localhost:5000

O haz click aqu√≠ (si est√°s en Windows):
  http://127.0.0.1:5000


DETENER LA APLICACI√ìN
================================================================================

Para detener la aplicaci√≥n en cualquier momento:
  Presiona: Ctrl + C

En la consola ver√°s:
  KeyboardInterrupt
  
Luego puedes cerrar la ventana.


PROBLEMAS COMUNES
================================================================================

‚ùå Error: "Python no est√° instalado"
‚úÖ Soluci√≥n:
   1. Descarga Python desde https://www.python.org/downloads/
   2. Durante instalaci√≥n, marca "Add Python to PATH"
   3. Reinicia PowerShell/CMD
   4. Intenta de nuevo

‚ùå Error: "ModuleNotFoundError: No module named 'flask'"
‚úÖ Soluci√≥n:
   Ejecuta: pip install -r requirements.txt

‚ùå Error: "Port 5000 already in use"
‚úÖ Soluci√≥n:
   Cierra otras aplicaciones que usen puerto 5000
   O edita app.py y cambia:
     app.run(debug=True, port=8000)

‚ùå Aplicaci√≥n lenta en primera ejecuci√≥n
‚úÖ Soluci√≥n:
   Normal: procesa 11.5M registros
   Pr√≥ximas ejecuciones ser√°n instant√°neas


LIMPIAR CACH√â (si hay problemas)
================================================================================

Copia y pega en PowerShell:

---INICIO---

cd data
Remove-Item .cache_data.pkl -Force
cd ..
python app.py

---FIN---


INFORMACI√ìN IMPORTANTE
================================================================================

‚è±Ô∏è TIEMPOS:
  - Primera ejecuci√≥n: 1-2 minutos (procesa 11.5M registros)
  - Pr√≥ximas ejecuciones: 5-10 segundos (carga desde cach√©)

üìä DATOS:
  - Total de registros: ~11.5 millones
  - Formatos: CSV, JSON, XML
  - Per√≠odo: 2022-2025
  - Categor√≠as: 8

üéØ ALGORITMOS:
  - ARIMA: Pron√≥sticos precisos (~8-12% sMAPE)
  - Regresi√≥n Lineal: Fallback si ARIMA falla

üåê INTERFAZ:
  - Dashboard: Estad√≠sticas y gr√°ficos
  - An√°lisis: An√°lisis profundo por categor√≠a
  - Pron√≥sticos: Predicciones ARIMA
  - Datos: Tabla completa de datos


ESTRUCTURA DEL PROYECTO
================================================================================

python_project/
‚îú‚îÄ‚îÄ app.py                 ‚Üê Aplicaci√≥n principal
‚îú‚îÄ‚îÄ data_processor.py      ‚Üê Procesamiento de datos
‚îú‚îÄ‚îÄ forecaster.py          ‚Üê Algoritmos ARIMA
‚îú‚îÄ‚îÄ requirements.txt       ‚Üê Dependencias
‚îú‚îÄ‚îÄ run.bat               ‚Üê Script Windows
‚îú‚îÄ‚îÄ run.ps1               ‚Üê Script PowerShell
‚îú‚îÄ‚îÄ templates/
‚îÇ   ‚îî‚îÄ‚îÄ index.html        ‚Üê Interfaz web
‚îî‚îÄ‚îÄ README.md             ‚Üê Documentaci√≥n


PR√ìXIMOS PASOS
================================================================================

1. Copia uno de los comandos de arriba
2. P√©galo en PowerShell/CMD
3. Presiona Enter
4. Espera a que termine de cargar
5. Abre navegador en http://localhost:5000
6. ¬°Disfruta del dashboard!


AYUDA ADICIONAL
================================================================================

Para m√°s informaci√≥n, lee:
  - python_project/README.md (documentaci√≥n completa)
  - INSTRUCCIONES_EJECUCION.md (instrucciones detalladas)
  - RESUMEN_PROYECTO.txt (resumen del proyecto)

================================================================================
                        ¬°LISTO PARA EMPEZAR!
================================================================================

